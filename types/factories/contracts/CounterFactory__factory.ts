/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CounterFactory,
  CounterFactoryInterface,
} from "../../contracts/CounterFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "timelock",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Create2EmptyBytecode",
    type: "error",
  },
  {
    inputs: [],
    name: "Create2FailedDeployment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "Create2InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "counter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initial",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "CounterDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "initial",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "ctrOwner",
        type: "address",
      },
    ],
    name: "computeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "initial",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "ctrOwner",
        type: "address",
      },
    ],
    name: "deployCounter",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a14380380610a1483398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610917806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c57806377656c19146100665780638da5cb5b14610095578063a43a0561146100a6578063f2fde38b146100b9575b600080fd5b6100646100cc565b005b6100796100743660046103d5565b6100e0565b6040516001600160a01b03909116815260200160405180910390f35b6000546001600160a01b0316610079565b6100796100b43660046103d5565b6101b6565b6100646100c736600461040a565b610242565b6100d4610285565b6100de60006102b2565b565b60006100ea610285565b6000604051806020016100fc906103ac565b601f1982820381018352601f909101166040818152602082018790526001600160a01b0386169082015260600160408051601f19818403018152908290526101479291602001610455565b604051602081830303815290604052905061016460008683610302565b604080518681526001600160a01b03868116602083015292945087928516917f662fbdb4a7657b70378e555d62643319af1822b463dad1bf6d04ec1ceeb4568a910160405180910390a3509392505050565b600080604051806020016101c9906103ac565b601f1982820381018352601f909101166040818152602082018790526001600160a01b0386169082015260600160408051601f19818403018152908290526102149291602001610455565b604051602081830303815290604052905061023785828051906020012030610382565b9150505b9392505050565b61024a610285565b6001600160a01b03811661027957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610282816102b2565b50565b6000546001600160a01b031633146100de5760405163118cdaa760e01b8152336004820152602401610270565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008347101561032e5760405163392efb2b60e21b815247600482015260248101859052604401610270565b815160000361035057604051631328927760e21b815260040160405180910390fd5b8282516020840186f590506001600160a01b03811661023b57604051633a0ba96160e11b815260040160405180910390fd5b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6104988061047383390190565b80356001600160a01b03811681146103d057600080fd5b919050565b6000806000606084860312156103ea57600080fd5b8335925060208401359150610401604085016103b9565b90509250925092565b60006020828403121561041c57600080fd5b61023b826103b9565b6000815160005b81811015610446576020818501810151868301520161042c565b50600093019283525090919050565b600061046a6104648386610425565b84610425565b94935050505056fe608060405234801561001057600080fd5b5060405161049838038061049883398101604081905261002f91610059565b600091909155600180546001600160a01b0319166001600160a01b03909216919091179055610096565b6000806040838503121561006c57600080fd5b825160208401519092506001600160a01b038116811461008b57600080fd5b809150509250929050565b6103f3806100a56000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063552410771161005b57806355241077146100c6578063812600df146100d95780638da5cb5b146100ec578063cc718f761461011757600080fd5b806313af40351461008257806315fe96dc146100975780633fa4f245146100aa575b600080fd5b610095610090366004610331565b610137565b005b6100956100a5366004610361565b6101c6565b6100b360005481565b6040519081526020015b60405180910390f35b6100956100d4366004610383565b610246565b6100956100e7366004610383565b6102b1565b6001546100ff906001600160a01b031681565b6040516001600160a01b0390911681526020016100bd565b6100b3610125366004610383565b60026020526000908152604090205481565b6001546001600160a01b0316331461016a5760405162461bcd60e51b81526004016101619061039c565b60405180910390fd5b6001546040516001600160a01b038084169216907fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c90600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146101f05760405162461bcd60e51b81526004016101619061039c565b60008281526002602090815260409182902080549084905582518181529182018490529184917f3bd36e881be2a3be10640b9875f2ff900c0dbcbc48792cf6bebddf254c541ef9910160405180910390a2505050565b6001546001600160a01b031633146102705760405162461bcd60e51b81526004016101619061039c565b60005460408051918252602082018390527f69be06033bef8d755e18606a27d6d07393aabbd1800776e503af2c8a03b7c681910160405180910390a1600055565b6001546001600160a01b031633146102db5760405162461bcd60e51b81526004016101619061039c565b806000808282546102ec91906103bf565b90915550506000546040805183815260208101929092527f230c08f549f5f9e591e87490c6c26b3715ba3bdbe74477c4ec927b160763f767910160405180910390a150565b60006020828403121561034357600080fd5b81356001600160a01b038116811461035a57600080fd5b9392505050565b6000806040838503121561037457600080fd5b50508035926020909101359150565b60006020828403121561039557600080fd5b5035919050565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b808201808211156103e057634e487b7160e01b600052601160045260246000fd5b9291505056fea164736f6c6343000818000aa164736f6c6343000818000a";

type CounterFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CounterFactory__factory extends ContractFactory {
  constructor(...args: CounterFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    timelock: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(timelock, overrides || {});
  }
  override deploy(
    timelock: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(timelock, overrides || {}) as Promise<
      CounterFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CounterFactory__factory {
    return super.connect(runner) as CounterFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterFactoryInterface {
    return new Interface(_abi) as CounterFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CounterFactory {
    return new Contract(address, _abi, runner) as unknown as CounterFactory;
  }
}
