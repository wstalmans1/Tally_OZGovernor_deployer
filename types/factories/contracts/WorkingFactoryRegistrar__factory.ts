/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  WorkingFactoryRegistrar,
  WorkingFactoryRegistrarInterface,
} from "../../contracts/WorkingFactoryRegistrar";

const _abi = [
  {
    inputs: [],
    name: "DeployFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyInitcode",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initcode",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initcode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "kind",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "deployAndRegister",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610611806100206000396000f3fe6080604052600436106100285760003560e01c80627743601461002d57806336cbe4ac1461005d575b600080fd5b61004061003b36600461035e565b61008f565b6040516001600160a01b0390911681526020015b60405180910390f35b61007061006b3660046103b8565b610133565b604080516001600160a01b039093168352602083019190915201610054565b60008181036100b05760405162a144b560e21b815260040160405180910390fd5b60405182848181843750808234f09250506001600160a01b03821690506100ea5760405163b4f5411160e01b815260040160405180910390fd5b806001600160a01b03167fb03c53b28e78a88e31607a27e1fa48234dce28d5d9d9ec7b295aeb02e674a1e13460405161012591815260200190565b60405180910390a292915050565b600080306001600160a01b031662774360348e8e6040518463ffffffff1660e01b8152600401610164929190610496565b60206040518083038185885af1158015610182573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906101a791906104c5565b91506001600160a01b038a1615610306576000604051806101000160405280846001600160a01b031681526020018b8152602001306001600160a01b031681526020018a81526020018e8e6040516102009291906104e9565b604051809103902081526020018967ffffffffffffffff16815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8901819004810282018101909252878152918101919088908890819084018382808284376000920191909152505050915250604051637273536160e01b81529091506001600160a01b038c16906372735361906102bf90849060040161053f565b6020604051808303816000875af11580156102de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030291906105eb565b9150505b9a509a98505050505050505050565b60008083601f84011261032757600080fd5b50813567ffffffffffffffff81111561033f57600080fd5b60208301915083602082850101111561035757600080fd5b9250929050565b6000806020838503121561037157600080fd5b823567ffffffffffffffff81111561038857600080fd5b61039485828601610315565b90969095509350505050565b6001600160a01b03811681146103b557600080fd5b50565b60008060008060008060008060008060e08b8d0312156103d757600080fd5b8a3567ffffffffffffffff808211156103ef57600080fd5b6103fb8e838f01610315565b909c509a5060208d01359150610410826103a0565b90985060408c0135975060608c0135965060808c013590808216821461043557600080fd5b90955060a08c0135908082111561044b57600080fd5b6104578e838f01610315565b909650945060c08d013591508082111561047057600080fd5b5061047d8d828e01610315565b915080935050809150509295989b9194979a5092959850565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6000602082840312156104d757600080fd5b81516104e2816103a0565b9392505050565b8183823760009101908152919050565b6000815180845260005b8181101561051f57602081850181015186830182015201610503565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260018060a01b038251166020820152602082015160408201526000604083015161057860608401826001600160a01b03169052565b5060608301516080830152608083015160a083015260a08301516105a860c084018267ffffffffffffffff169052565b5060c08301516101008060e08501526105c56101208501836104f9565b915060e0850151601f1985840301828601526105e183826104f9565b9695505050505050565b6000602082840312156105fd57600080fd5b505191905056fea164736f6c6343000818000a";

type WorkingFactoryRegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorkingFactoryRegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorkingFactoryRegistrar__factory extends ContractFactory {
  constructor(...args: WorkingFactoryRegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WorkingFactoryRegistrar & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): WorkingFactoryRegistrar__factory {
    return super.connect(runner) as WorkingFactoryRegistrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorkingFactoryRegistrarInterface {
    return new Interface(_abi) as WorkingFactoryRegistrarInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WorkingFactoryRegistrar {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as WorkingFactoryRegistrar;
  }
}
