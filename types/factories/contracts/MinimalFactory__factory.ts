/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MinimalFactory,
  MinimalFactoryInterface,
} from "../../contracts/MinimalFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DeployFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyInitcode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initcode",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103f53803806103f583398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b6102f8806100fd6000396000f3fe60806040526004361061003e5760003560e01c806277436014610043578063715018a6146100725780638da5cb5b14610089578063f2fde38b146100a7575b600080fd5b610056610051366004610249565b6100c7565b6040516001600160a01b03909116815260200160405180910390f35b34801561007e57600080fd5b50610087610175565b005b34801561009557600080fd5b506000546001600160a01b0316610056565b3480156100b357600080fd5b506100876100c23660046102bb565b610189565b60006100d16101cc565b60008290036100f25760405162a144b560e21b815260040160405180910390fd5b60405182848181843750808234f09250506001600160a01b038216905061012c5760405163b4f5411160e01b815260040160405180910390fd5b806001600160a01b03167fb03c53b28e78a88e31607a27e1fa48234dce28d5d9d9ec7b295aeb02e674a1e13460405161016791815260200190565b60405180910390a292915050565b61017d6101cc565b61018760006101f9565b565b6101916101cc565b6001600160a01b0381166101c057604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101c9816101f9565b50565b6000546001600160a01b031633146101875760405163118cdaa760e01b81523360048201526024016101b7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806020838503121561025c57600080fd5b823567ffffffffffffffff8082111561027457600080fd5b818501915085601f83011261028857600080fd5b81358181111561029757600080fd5b8660208285010111156102a957600080fd5b60209290920196919550909350505050565b6000602082840312156102cd57600080fd5b81356001600160a01b03811681146102e457600080fd5b939250505056fea164736f6c6343000818000a";

type MinimalFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinimalFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MinimalFactory__factory extends ContractFactory {
  constructor(...args: MinimalFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MinimalFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MinimalFactory__factory {
    return super.connect(runner) as MinimalFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalFactoryInterface {
    return new Interface(_abi) as MinimalFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MinimalFactory {
    return new Contract(address, _abi, runner) as unknown as MinimalFactory;
  }
}
