/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BytecodeFactory,
  BytecodeFactoryInterface,
} from "../../contracts/BytecodeFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DeployFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyInitcode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "create2",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "initcode",
        type: "bytes",
      },
    ],
    name: "computeAddress",
    outputs: [
      {
        internalType: "address",
        name: "predicted",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initcode",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "initcode",
        type: "bytes",
      },
    ],
    name: "deployCreate2",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "initcode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "kind",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "deployCreate2AndRegister",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initcode",
        type: "bytes",
      },
    ],
    name: "initcodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100c457601f61090d38819003918201601f19168301916001600160401b038311848410176100c9578084926020946040528339810103126100c457516001600160a01b0390818116908190036100c45780156100ab5760018060a01b0319918260015416600155816000549384161760005560405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a361082d90816100e08239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe604060808152600436101561001357600080fd5b60003560e01c908162774360146100b95750806326307668146100b45780634788f05d146100af578063715018a6146100aa57806379ba5097146100a55780638da5cb5b146100a0578063ca9ffe941461009b578063dc029c5e14610096578063e30c3978146100915763f2fde38b1461008c57600080fd5b61052c565b610503565b61045d565b6103b6565b61038d565b61030e565b6102a5565b61027d565b6101ed565b6100c23661018e565b906100cb61080c565b811561014b5781835191823734f06001600160a01b038116801561013a57916000610136937f658fe7838344c6946ad649dd05f4eea3177768c1873deb295e4c377f2104a76d838051848152346020820152a3516001600160a01b0390911681529081906020820190565b0390f35b825163b4f5411160e01b8152600490fd5b825162a144b560e21b8152600490fd5b9181601f840112156101895782359167ffffffffffffffff8311610189576020838186019501011161018957565b600080fd5b6020600319820112610189576004359067ffffffffffffffff8211610189576101b99160040161015b565b9091565b90604060031983011261018957600435916024359067ffffffffffffffff8211610189576101b99160040161015b565b6101f6366101bd565b6101fe61080c565b801561026c578083916040519384376001600160a01b039234f516801561025a57602091817f658fe7838344c6946ad649dd05f4eea3177768c1873deb295e4c377f2104a76d60408051600181523487820152a3604051908152f35b60405163b4f5411160e01b8152600490fd5b60405162a144b560e21b8152600490fd5b346101895760206102976102903661018e565b36916105d8565b818151910120604051908152f35b346101895760008060031936011261030b576102bf61080c565b600180546001600160a01b03199081169091558154908116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b346101895760008060031936011261030b576001546001600160a01b033381831603610375576001600160a01b031991821660015582543392811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405163118cdaa760e01b8152336004820152602490fd5b34610189576000366003190112610189576000546040516001600160a01b039091168152602090f35b34610189576103d16103c7366101bd565b92919236916105d8565b6020815191012060405190602082019260ff60f81b84523060601b60218401526035830152605582015260558152608081019080821067ffffffffffffffff831117610430576040829052519091206001600160a01b03168152602090f35b6105a0565b6001600160a01b0381160361018957565b6084359067ffffffffffffffff8216820361018957565b60e03660031901126101895767ffffffffffffffff6024358181116101895761048a90369060040161015b565b6044929192359061049a82610435565b6104a2610446565b60a435848111610189576104ba90369060040161015b565b9160c43595861161018957610136966104da6104e997369060040161015b565b9690956064359260043561061f565b6040516001600160a01b0390911681529081906020820190565b34610189576000366003190112610189576001546040516001600160a01b039091168152602090f35b346101895760203660031901126101895760043561054981610435565b61055161080c565b60018060a01b0380911690816bffffffffffffffffffffffff60a01b6001541617600155600054167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700600080a3005b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761043057604052565b92919267ffffffffffffffff82116104305760405191610602601f8201601f1916602001846105b6565b829481845281830111610189578281602093846000960137010152565b959098939897929496919761063261080c565b6040516304c60ecd60e31b81529860208a8061065384868d6004850161077a565b038134305af1998a156106f15760009a6106f6575b5093899a936106aa9361068460209b9c989460009836916105d8565b8b81519101209b6040519c8d9b8c9a8b9963228bd67960e11b8b52309160048c016107ac565b03926001600160a01b03165af180156106f1576106c5575090565b6106e69060203d6020116106ea575b6106de81836105b6565b81019061079d565b5090565b503d6106d4565b610791565b6020999a50936106aa936106846107296000989499959e978d3d8f1161073a575b61072181836105b6565b810190610741565b9c9b50509350939a91959094610668565b503d610717565b90816020910312610189575161075681610435565b90565b908060209392818452848401376000828201840152601f01601f1916010190565b604090610756949281528160208201520191610759565b6040513d6000823e3d90fd5b90816020910312610189575190565b9896946107569a98946107fe97928b9567ffffffffffffffff9560206101009860018060a01b03809516815201521660408c015260608b015260808a01521660a08801528060c0880152860191610759565b9260e0818503910152610759565b6000546001600160a01b031633036103755756fea164736f6c6343000818000a";

type BytecodeFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BytecodeFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BytecodeFactory__factory extends ContractFactory {
  constructor(...args: BytecodeFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      BytecodeFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BytecodeFactory__factory {
    return super.connect(runner) as BytecodeFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BytecodeFactoryInterface {
    return new Interface(_abi) as BytecodeFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BytecodeFactory {
    return new Contract(address, _abi, runner) as unknown as BytecodeFactory;
  }
}
