/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TestFactory,
  TestFactoryInterface,
} from "../../contracts/TestFactory";

const _abi = [
  {
    inputs: [],
    name: "DeployFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyInitcode",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initcode",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "testAssembly",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101c5806100206000396000f3fe6080604052600436106100285760003560e01c80627743601461002d5780631f470c7e1461005d575b600080fd5b61004061003b366004610146565b61008b565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561006957600080fd5b5061007d610078366004610146565b61012f565b604051908152602001610054565b60008181036100ac5760405162a144b560e21b815260040160405180910390fd5b60405182848181843750808234f09250506001600160a01b03821690506100e65760405163b4f5411160e01b815260040160405180910390fd5b806001600160a01b03167fb03c53b28e78a88e31607a27e1fa48234dce28d5d9d9ec7b295aeb02e674a1e13460405161012191815260200190565b60405180910390a292915050565b600080604051838581818437509020949350505050565b6000806020838503121561015957600080fd5b823567ffffffffffffffff8082111561017157600080fd5b818501915085601f83011261018557600080fd5b81358181111561019457600080fd5b8660208285010111156101a657600080fd5b6020929092019691955090935050505056fea164736f6c6343000818000a";

type TestFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestFactory__factory extends ContractFactory {
  constructor(...args: TestFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestFactory__factory {
    return super.connect(runner) as TestFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestFactoryInterface {
    return new Interface(_abi) as TestFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestFactory {
    return new Contract(address, _abi, runner) as unknown as TestFactory;
  }
}
