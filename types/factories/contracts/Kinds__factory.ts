/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Kinds, KindsInterface } from "../../contracts/Kinds";

const _abi = [
  {
    inputs: [],
    name: "COUNTER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FACTORY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GOVERNOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIMELOCK",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576101789081610020823930815050f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081632dd3100014610132575080636dc0ae22146100fc5780637aadef8b146100c657806382bfefc814610090576399b705791461005857600080fd5b8060031936011261008d5760206040517fcfe10320bcac53115bb5d1a7c2626fb69a0bc1509a3149c15a8ece734bc15d548152f35b80fd5b508060031936011261008d5760206040517f96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d48152f35b508060031936011261008d5760206040517faefebe170cbaff0af052a32795af0e1b8afff9850f946ad2869be14f355343718152f35b508060031936011261008d5760206040517f1a6838efa4183e08fe3607359d1259272af9d4716f65e1a7b5921f78fd5a3c6a8152f35b90508160031936011261016757807f547b500e425d72fd0723933cceefc203cef652b4736fd04250c3369b3e1a0a7360209252f35b5080fdfea164736f6c6343000818000a";

type KindsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KindsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Kinds__factory extends ContractFactory {
  constructor(...args: KindsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Kinds & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Kinds__factory {
    return super.connect(runner) as Kinds__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KindsInterface {
    return new Interface(_abi) as KindsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Kinds {
    return new Contract(address, _abi, runner) as unknown as Kinds;
  }
}
